/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-07-25 15:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.smarteval.entities.Category;
import com.smarteval.database.DataStore;

public final class addquestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.smarteval.entities.Category");
    _jspx_imports_classes.add("com.smarteval.database.DataStore");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./CSS/index.css\">\r\n");
      out.write("<title>SmartEval - Add Question</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		if(session.getAttribute("username")==null){
			response.sendRedirect(request.getContextPath()+"/login.jsp");
		}
		else if(session.getAttribute("role")==null || (Integer)session.getAttribute("role")!=1){
			response.sendRedirect(request.getContextPath()+"/errorpage.jsp");
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
DataStore.retriveAll("categories");
      out.write("\r\n");
      out.write("	<div class=\"add-question\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header2.jsp", out, false);
      out.write("\r\n");
      out.write("		<form action=\"addquestion\" method=\"POST\">\r\n");
      out.write("			<div class=\"add-question-container\">\r\n");
      out.write("				<h1>Add Question</h1>\r\n");
      out.write("				<hr>\r\n");
      out.write("				<br> \r\n");
      out.write("				<label for=\"question\"><b>Question</b></label> \r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Question\" name=\"question\" id=\"question\" required> \r\n");
      out.write("				<label for=\"option1\"><b>Option 1</b></label> \r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Option 1\" name=\"option1\" id=\"option1\" required> \r\n");
      out.write("				<label for=\"option2\"><b>Option 2</b></label> \r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Option 2\" name=\"option2\" id=\"option2\" required> \r\n");
      out.write("				<label for=\"option3\"><b>Option 3</b></label> \r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Option 3\" name=\"option3\" id=\"option3\" required> \r\n");
      out.write("				<label for=\"option4\"><b>Option 4</b></label> \r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Option 4\" name=\"option4\" id=\"option4\" required> \r\n");
      out.write("				<label for=\"answer\"><b>Answer</b></label>\r\n");
      out.write("				<input type=\"text\" placeholder=\"Enter Answer\" name=\"answer\" id=\"answer\" required> <br> \r\n");
      out.write("				<label for=\"subject\"><b>Subject</b></label>\r\n");
      out.write("				<select id=\"subject\" name=\"subject\">\r\n");
      out.write("					");
for(Category c : DataStore.allCategories){ 
      out.write("\r\n");
      out.write("						<option value=\"");
      out.print(c.getCategoryID());
      out.write('"');
      out.write('>');
      out.print(c.getCategoryName());
      out.write("</option>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("				</select> \r\n");
      out.write("				<br>\r\n");
      out.write("				");
if(request.getAttribute("questionInMsg")!=null){
      out.write("\r\n");
      out.write("					<div class=\"message-for-user-divs\">\r\n");
      out.write("						");
      out.print(request.getAttribute("questionInMsg"));
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("				<button type=\"submit\" class=\"submitbtn\">Add Question</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
